name: Build
on: [ push, pull_request ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

  CCACHE_BASEDIR: ${{github.workspace}}
  CCACHE_DIR: ${{github.workspace}}/.ccache
  CCACHE_COMPRESS: true
  CCACHE_COMPRESSLEVEL: 6

jobs:
  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, ubuntu-22.04 ]
        type: [ RelWithDebInfo, Debug ]
      fail-fast: false
    env:
      BUILD_TYPE: ${{ matrix.type }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: ccache cache files
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ matrix.os }}-${{ env.BUILD_TYPE }}-ccache-${{ github.run_id }}
          restore-keys: |
            ${{ matrix.os }}-${{ env.BUILD_TYPE }}-ccache-

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Import llvm gpg key
        run: >
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo dd of="/usr/share/keyrings/llvm.asc"

      - name: Add llvm repository
        run: >
          . /etc/lsb-release && 
          echo "deb [signed-by=/usr/share/keyrings/llvm.asc] http://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME} main" 
          | sudo dd of=/etc/apt/sources.list.d/llvm.list

      - name: Update apt package repos
        run:
          sudo apt-get update

      - name: Install apt packages
        run: >
          sudo apt-get -yq --no-install-suggests --no-install-recommends install
          ccache
          libboost-dev
          ninja-build
          clang-11 libclang-11-dev
          qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools

      #          libboost-filesystem-dev
      #          libboost-program-options-dev
      #          libboost-system-dev
      #          libboost-test-dev
      #          libboost-thread-dev


      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: >
          cmake $GITHUB_WORKSPACE -GNinja 
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE 
          -DLLVM_DIR=/usr/lib/llvm-11/lib/cmake/llvm 
          -DClang_DIR=/usr/lib/llvm-11/lib/cmake/clang
          -DBUILD_CXX_LANGUAGE_PACKAGE=ON 

      - name: Build
        working-directory: ${{runner.workspace}}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . -- -k0

      - name: Test
        working-directory: $GITHUB_WORKSPACE/bin/test
        run: ${{runner.workspace}}/build/test/Sourcetrail_test
